syntax = "proto3";

import "needlestack/apis/indices.proto";


/********************
 *
 * List Requests
 * 
 ********************/

/* List collections loaded on cluster */
message CollectionsListRequest {
    // Names of collecitons to return, otherwise return all collections
    repeated string names = 1;
};

message CollectionsListResponse {
    repeated Collection collections = 1;
};

/********************
 *
 * Add/Delete Requests
 * 
 ********************/

message CollectionsAddRequest {
    repeated Collection collections = 1;
    bool noop = 2;
    string balance_algorithm = 3;
};

message CollectionsAddResponse {
    repeated Collection collections = 1;
    bool success = 2;
};

message CollectionsDeleteRequest {
    repeated string names = 1;
    bool noop = 2;
};

message CollectionsDeleteResponse {
    repeated string names = 1;
    bool success = 2;
};


/********************
 *
 * Load Requests
 * 
 ********************/

/* Load collections on a Searcher node */
message CollectionsLoadRequest {
};

message CollectionsLoadResponse {
    bool success = 1;
};

/********************
 *
 * Components to Collections
 * 
 ********************/

/* A collection name, its shards, and replication factor */
message Collection {
    string name = 1;
    repeated Shard shards = 2;
    uint32 replication_factor = 3;
    bool enable_id_to_vector = 4;
};

/* A shard from a collection */
message Shard {

    string collection_name = 1;
    string name = 2;

    // Optional shard weight used to help distribute shards evenly among searcher
    float weight = 3;

    // Optional list of nodes the shard exists on
    repeated Replica replicas = 4;

    // A source of the type of index to load
    BaseIndex index = 5;
};

/* A Searcher node that host shard replicas */
message Replica {

    enum State {
        UNKNOWN = 0;
        ACTIVE = 1;
        DOWN = 2;
        BOOTING = 3;
        RECOVERING = 4;
    };

    string collection_name = 1;
    string shard_name = 2;
    Node node = 3;
    State state = 4;
    bool leader = 5;
};

message Node {
    string hostport = 1;
    string ip_address = 2;
    string hostname = 3;
    int32 port = 4;
};
